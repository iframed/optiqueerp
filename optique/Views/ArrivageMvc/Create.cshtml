@model optique.Dtos.ArrivageDTO




<div class="container" style="margin-top: 30px;">
    <div class="breadcrumb">
        <a href="@Url.Action("Index", "Acceuil")" class="breadcrumb-link">Accueil</a> &gt;
        <span class="breadcrumb-current">Arrivages</span> &gt;
        <span class="breadcrumb-current">Ajouter un Détail d'Arrivage</span>
    </div>
</div>

<div class="form-container">
    <form asp-action="Create" asp-controller="ArrivageMvc" method="post" class="arrivage-form" onsubmit="return validateForm()">
        <div class="form-row">
            <div class="col-md-6 mb-3">
                <label asp-for="DateArrivage">Date d'arrivage</label>
                <input asp-for="DateArrivage" class="form-control" type="date" />
                <span asp-validation-for="DateArrivage" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="FournisseurId">Fournisseur</label>
                <div class="input-group">
                    <select asp-for="FournisseurId" class="form-control">
                        <option value="">Sélectionner un fournisseur</option>
                        @if (ViewBag.Fournisseurs != null)
                        {
                            foreach (var fournisseur in ViewBag.Fournisseurs)
                            {
                                <option value="@fournisseur.Id">@fournisseur.NomFournisseur</option>
                            }
                        }
                    </select>
                    <a href="@Url.Action("Create", "FournisseurMvc")" class="add-btn">
                        <button type="button" class="btn-round">+</button>
                    </a>
                </div>
                <span asp-validation-for="FournisseurId" class="text-danger"></span>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-6 mb-3">
                <label asp-for="SocieteId">Société</label>
                <div class="input-group">
                    <select asp-for="SocieteId" class="form-control">
                        <option value="">Sélectionner une société</option>
                        @if (ViewBag.Societes != null)
                        {
                            foreach (var societe in ViewBag.Societes)
                            {
                                <option value="@societe.Id">@societe.NomSociete</option>
                            }
                        }
                    </select>
                    <a href="@Url.Action("Create", "SocieteMvc")" class="add-btn">
                        <button type="button" class="btn-round">+</button>
                    </a>
                </div>
                <span asp-validation-for="SocieteId" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="NumBL">N° Bon de livraison</label>
                <input asp-for="NumBL" class="form-control" />
                <span asp-validation-for="NumBL" class="text-danger"></span>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-6 mb-3">
                <label asp-for="NumFacture">N° Facture</label>
                <input asp-for="NumFacture" class="form-control" />
                <span asp-validation-for="NumFacture" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
                <label asp-for="MontantFacture">Montant de la facture</label>
                <div class="input-group">
                    <input asp-for="MontantFacture" class="form-control" />
                    <span class="currency">Euro</span>
                </div>
                <span asp-validation-for="MontantFacture" class="text-danger"></span>
            </div>

            <!-- Dropdown for Status -->
    <div class="form-group">
        <label asp-for="StatutId" class="control-label">Statut de Distribution</label>
        <select asp-for="StatutId" class="form-control" asp-items="@(new SelectList(ViewBag.Statuts, "Value", "Text"))"></select>
    </div>
        </div>

        <!-- Section des paiements -->
        <div id="detailsPaiementSection" class="mt-4">
            <h4>Détails de paiement</h4>
            <hr />
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Type de paiement</th>
                        <th>N° Chèque</th>
                        <th>N° LCN</th>
                        <th>Montant</th>
                        <th>Date d'échéance</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="detailsPaiementsContainer">
                    <tr data-index="0">
                        <td>
                            <select name="DetailsPaiements[0].TypeDePaiementId" class="form-control type-paiement" required>
                                <option value="">Sélectionnez un type</option>
                                @foreach (var type in ViewBag.TypesDePaiement)
                                {
                                    <option value="@type.Value">@type.Text</option>
                                }
                            </select>
                        </td>
                        <td><input type="text" name="DetailsPaiements[0].NCheque" class="form-control n-cheque" /></td>
                        <td><input type="text" name="DetailsPaiements[0].NLCN" class="form-control n-lcn" /></td>
                        <td><input type="number" name="DetailsPaiements[0].Montant" class="form-control montant" required /></td>
                        <td><input type="date" name="DetailsPaiements[0].DateEcheance" class="form-control" /></td>
                        <td><button type="button" class="btn btn-danger remove-details-paiement">X</button></td>
                    </tr>
                </tbody>
            </table>

            <!-- Align buttons in the same row -->
            <div class="form-actions">
                <button type="button" class="btn btn-secondary me-2" onclick="addDetailsPaiement()">+</button>
                <button type="submit" class="btn btn-primary">Créer l'arrivage</button>
            </div>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

$(document).ready(function () {
    // Fonction qui gère l'activation/désactivation des champs en fonction du type de paiement
    function updateFields() {
        // Pour chaque ligne du tableau
        $('#detailsPaiementsContainer tr').each(function () {
            var typeDePaiement = $(this).find('.type-paiement').val();
            var chequeField = $(this).find('.n-cheque');
            var lcnField = $(this).find('.n-lcn');
            var montantField = $(this).find('.montant');

            // Désactiver tous les champs par défaut
            chequeField.prop('disabled', true);
            lcnField.prop('disabled', true);
            montantField.prop('disabled', false); // Le montant est toujours actif

            // Activer les champs en fonction du type de paiement
            if (typeDePaiement == '3') { // Supposons que 2 correspond à LCN
                lcnField.prop('disabled', false);  // Activer LCN
            } else if (typeDePaiement == '4') { // Supposons que 1 correspond à Cheque
                chequeField.prop('disabled', false);  // Activer Chèque
            }
        });
    }

    // Appel initial pour s'assurer que tout est configuré au chargement de la page
    updateFields();

    // Appliquer les changements lorsque le type de paiement est modifié
    $('#detailsPaiementsContainer').on('change', '.type-paiement', function () {
        updateFields();
    });
});









    var detailsPaiementIndex = 1;

// Fonction pour ajouter une nouvelle ligne de détail de paiement
function addDetailsPaiement() {
    var optionsHtml = '';
    @foreach (var type in ViewBag.TypesDePaiement)
    {
        <text>
            optionsHtml += '<option value="@type.Value">@type.Text</option>';
        </text>
    }

    var html = `
        <tr data-index="` + detailsPaiementIndex + `">
            <td><select name="DetailsPaiements[` + detailsPaiementIndex + `].TypeDePaiementId" class="form-control type-paiement" required onchange="validatePaymentFields(this)">
                <option value="">Sélectionnez un type</option>` + optionsHtml + `</select></td>
            <td><input type="text" name="DetailsPaiements[` + detailsPaiementIndex + `].NCheque" class="form-control n-cheque" /></td>
            <td><input type="text" name="DetailsPaiements[` + detailsPaiementIndex + `].NLCN" class="form-control n-lcn" /></td>
            <td><input type="number" name="DetailsPaiements[` + detailsPaiementIndex + `].Montant" class="form-control" required /></td>
            <td><input type="date" name="DetailsPaiements[` + detailsPaiementIndex + `].DateEcheance" class="form-control" /></td>
            <td><button type="button" class="btn btn-danger remove-details-paiement">X</button></td>
        </tr>`;
    
    $('#detailsPaiementsContainer').append(html);
    detailsPaiementIndex++;
}

// Délégation d'événements pour la suppression dynamique
$(document).on('click', '.remove-details-paiement', function () {
    $(this).closest('tr').remove();
});

// Fonction de validation pour chaque champ
function validateForm() {
    let isValid = true;

    // Parcourir chaque ligne de paiement et valider en fonction du type
    $('#detailsPaiementsContainer tr').each(function () {
        const typePaiement = $(this).find('.type-paiement').val();
        const nCheque = $(this).find('.n-cheque').val();
        const nLCN = $(this).find('.n-lcn').val();

        if (typePaiement === 'Cheque' && !nCheque) {
            alert('Le numéro de chèque est obligatoire pour le type de paiement "Chèque".');
            isValid = false;
        } else if (typePaiement === 'LCN' && !nLCN) {
            alert('Le numéro LCN est obligatoire pour le type de paiement "LCN".');
            isValid = false;
        }
    });

    return isValid;
}

// Fonction pour gérer la validation des champs spécifiques à chaque ligne de paiement
function validatePaymentFields(selectElement) {
    const $row = $(selectElement).closest('tr');
    const typePaiement = $(selectElement).val();
    const nChequeField = $row.find('.n-cheque');
    const nLCNField = $row.find('.n-lcn');

    if (typePaiement === 'Cheque') {
        nChequeField.prop('required', true).attr('placeholder', 'Numéro de chèque requis');
        nLCNField.prop('required', false).removeAttr('placeholder');
    } else if (typePaiement === 'LCN') {
        nLCNField.prop('required', true).attr('placeholder', 'Numéro LCN requis');
        nChequeField.prop('required', false).removeAttr('placeholder');
    } else {
        nChequeField.prop('required', false).removeAttr('placeholder');
        nLCNField.prop('required', false).removeAttr('placeholder');
    }
}

</script>


<style>


     /* Circular button */
    .btn-round {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        background-color: #599bde;
        color: white;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        cursor: pointer;
        padding: 0;
    }


    .rounded-btn:hover {
        background-color: #003366;
    }
    .form-container {
        max-width: 85%;
        margin: 0 auto;
        padding: 20px;
        background-color: white;
        margin-top: 100px;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

    .breadcrumb {
        font-size: 14px;
        margin-bottom: 20px;
        color: black;
    }

    .breadcrumb a {
        text-decoration: none;
        color: black;
    }

    .breadcrumb a:hover {
        text-decoration: underline;
    }

    .form-row {
        display: flex;
        justify-content: space-between;
        gap: 20px;
        margin-bottom: 20px;
    }

    .col-md-6 {
        flex: 1;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        border-radius: 4px;
        border: 1px solid rgb(44, 14, 241);
        font-size: 14px;
        height: 40px;
    }

    .input-group {
        display: flex;
        align-items: center;
    }

    .input-group .form-control {
        flex: 1;
    }

    .add-btn {
        margin-left: 5px;
        padding: 8px;
        font-size: 16px;
        border: none;
        
        color: white;
        cursor: pointer;
        border-radius: 4px;
    }

    .add-btn:hover {
        background-color: #003366;
    }

    .form-actions {
        display: flex;
        justify-content: center;
        gap: 30px;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #004080;
        color: white;
        border-radius: 5px;
    }

    .btn-secondary {
        background-color: #004080;
        color: white;
        border-radius: 50px;
    }

    .btn-primary:hover {
        background-color: #d6d6d6;
         color: black;
    }

    .btn-secondary:hover {
        background-color: #d6d6d6;
         color: black;
    }

    .currency {
        margin-left: 5px;
        line-height: 32px;
        color: #6c757d;
    }

    .text-danger {
        color: red;
    }

    h4 {
        color: #4a90e2;
        margin-bottom: 15px;
        font-weight: bold;
    }
</style>