@model optique.ViewModels.NouvelleVenteViewModel

@{
    ViewData["Title"] = "Créer une nouvelle vente";
}



@using (Html.BeginForm("NouvelleVente", "StockParMagasin", FormMethod.Post, new { id = "venteForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="header">
            <div class="breadcrumb">
                <a href="@Url.Action("Index", "Acceuil")" class="breadcrumb-link">
                    <i class="fas fa-home"></i> Accueil
                </a> 
                <span class="breadcrumb-separator">&gt;</span>
                <a href="@Url.Action("Index", "VenteMvc")" class="breadcrumb-link">
                    <i class="fas fa-shopping-cart"></i> Vente
                </a> 
                <span class="breadcrumb-separator">&gt;</span>
                <span>Nouvelle vente</span>
            </div>
        </div>
        

        <!-- Hidden Fields for ClientId, ArticleId, and CreePar -->
        @Html.HiddenFor(model => model.ClientId)
        @Html.HiddenFor(model => model.ArticleId)
        @Html.HiddenFor(model => model.CreePar)

        <!-- Row: Formulaire de Vente (Left) and Détails de Distribution (Right) -->
        
            <div class="container" style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-top: 5%;">
    <!-- Formulaire de Vente (Left Column) -->
    <div class="formulaire-vente" >
        <div class="form-row" style="gap: 100px; margin-top: 70px;">
            <div class="col-md-6" >
                <div class="form-group">
                    @Html.LabelFor(model => model.ClientIdAcheteur, "Client", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ClientIdAcheteur, new SelectList(ViewBag.ClientsParticuliers, "Id", "NomClient"), "Client", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClientIdAcheteur, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DateDeVente, "Date de Vente", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DateDeVente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateDeVente, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
    <div class="form-group">
        @Html.LabelFor(model => model.NDeBon, "N° de Bon", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.NDeBon, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NDeBon, "", new { @class = "text-danger" })
    </div>
</div>

        <div class="form-row" style="gap: 105px;">
            <div class="col-md-6" >
                <div class="form-group">
                    @Html.LabelFor(model => model.PrixDeVente, "Prix de Vente", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PrixDeVente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrixDeVente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6" >
                <div class="form-group">
                    @Html.LabelFor(model => model.QuantiteVendu, "Quantité Vendue", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.QuantiteVendu, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuantiteVendu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
           <div id="detailsPaiementSection" class="mt-4" >
         
            <table class="table table-bordered" style="height: 100px;">
                <thead>
                    <tr>
                        <th>Type de paiement</th>
                        <th>N° Chèque</th>
                        <th>N° LCN</th>
                        <th>Montant</th>
                        <th>Date d'échéance</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="detailsPaiementsContainer">
                    <tr data-index="0">
                        <td>
                            <select name="DetailsPaiements[0].TypeDePaiementId" class="form-control type-paiement" required>
                                <option value="">type</option>
                                @foreach (var type in ViewBag.TypesDePaiement)
                                {
                                    <option value="@type.Value">@type.Text</option>
                                }
                            </select>
                        </td>
                        <td><input type="text" name="DetailsPaiements[0].NCheque" class="form-control n-cheque" /></td>
                        <td><input type="text" name="DetailsPaiements[0].NLCN" class="form-control n-lcn" /></td>
                        <td><input type="number" name="DetailsPaiements[0].Montant" class="form-control montant" required /></td>
                        <td><input type="date" name="DetailsPaiements[0].DateEcheance" class="form-control" /></td>
                        <td><button type="button" class="btn btn-danger remove-details-paiement">X</button></td>
                    </tr>
                </tbody>
            </table>

            <!-- Buttons in one row -->
            <div class="form-actions d-flex justify-content-between mt-4">
                <button type="button" class="btn btn-secondary" onclick="addDetailsPaiement()" >Ajouter </button>
                <button type="button" id="savePaymentBtn" class="btn btn-primary" >Enregistrer </button>
                <input type="submit" value="Créer" class="btn btn-primary"  />
            </div>
        </div>

        
    </div>

    <!-- Détails de Distribution (Right Column) -->
    <div class="stock-details-panel p-3" style="background-color: rgb(135, 166, 238); border-radius: 5px;  width: 80%; margin-left: 30px; height: 550px; text-align: center; margin-bottom: 20px; font-size: 20px;">
        <h4 style="color: black; ">Détails du stock</h4>
        <p style="margin-top: 50px;"> <strong>Marque:</strong> @Model.Marque</p>
        <p><strong>Référence:</strong> @Model.Reference</p>
        <p><strong>Couleur:</strong> @Model.Couleur</p>
        <p><strong>Type article:</strong> @Model.TypeArticle</p>
        <p><strong>Quantité disponible:</strong> @Model.QuantiteDisponible</p>
    </div>
</div>



        <!-- Payment Details Section (Below the row) -->
     
    </div>
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<script type="text/javascript">

$(document).ready(function () {
    // Fonction qui gère l'activation/désactivation des champs en fonction du type de paiement
    function updateFields() {
        // Pour chaque ligne du tableau
        $('#detailsPaiementsContainer tr').each(function () {
            var typeDePaiement = $(this).find('.type-paiement').val();
            var chequeField = $(this).find('.n-cheque');
            var lcnField = $(this).find('.n-lcn');
            var montantField = $(this).find('.montant');

            // Désactiver tous les champs par défaut
            chequeField.prop('disabled', true);
            lcnField.prop('disabled', true);
            montantField.prop('disabled', false); // Le montant est toujours actif

            // Activer les champs en fonction du type de paiement
            if (typeDePaiement == '3') { // Supposons que 2 correspond à LCN
                lcnField.prop('disabled', false);  // Activer LCN
            } else if (typeDePaiement == '4') { // Supposons que 1 correspond à Cheque
                chequeField.prop('disabled', false);  // Activer Chèque
            }
        });
    }

    // Appel initial pour s'assurer que tout est configuré au chargement de la page
    updateFields();

    // Appliquer les changements lorsque le type de paiement est modifié
    $('#detailsPaiementsContainer').on('change', '.type-paiement', function () {
        updateFields();
    });
});




    var detailsPaiementIndex = 1; // Commence à 1 car un premier formulaire est déjà présent

    function addDetailsPaiement() {
        var html = `
            <tr data-index="` + detailsPaiementIndex + `">
                <td><select name="DetailsPaiements[` + detailsPaiementIndex + `].TypeDePaiementId" class="form-control" required>
                    <option value=""> type</option>
                    @foreach (var type in ViewBag.TypesDePaiement) {
                        <option value="@type.Value">@type.Text</option>
                    }
                </select></td>
                <td><input type="text" name="DetailsPaiements[` + detailsPaiementIndex + `].NCheque" class="form-control" /></td>
                <td><input type="text" name="DetailsPaiements[` + detailsPaiementIndex + `].NLCN" class="form-control" /></td>
                <td><input type="number" name="DetailsPaiements[` + detailsPaiementIndex + `].Montant" class="form-control" required /></td>
                <td><input type="date" name="DetailsPaiements[` + detailsPaiementIndex + `].DateEcheance" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger remove-details-paiement">X</button></td>
            </tr>`;
        $('#detailsPaiementsContainer').append(html);
        detailsPaiementIndex++;
    }

    $(document).ready(function () {
        $('#detailsPaiementsContainer').on('click', '.remove-details-paiement', function () {
            $(this).closest('tr').remove();
        });

        // Enregistrer les détails de paiement via AJAX
        $('#savePaymentBtn').click(function (e) {
            e.preventDefault();
            var formData = $('#venteForm').serialize();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SavePaymentDetail", "StockParMagasin")',
                data: formData,
                success: function (response) {
                    alert('Détail de paiement enregistré avec succès');
                },
                error: function () {
                    alert('Une erreur est survenue lors de l\'enregistrement du détail de paiement');
                }
            });
        });
    });
</script>


<style>
    body {
        font-family: 'Arial', sans-serif;
        font-size: 14px;
        color: #333;
        background-color: white;
    }

    .mt-4{ 
        max-width: 100%;
    }


    .breadcrumb {
        font-size: 18px;
        color: #333;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .breadcrumb-link {
        color: #007bff;
        text-decoration: none;
        margin-right: 10px;
        display: flex;
        align-items: center;
        transition: color 0.3s ease;
    }

    .breadcrumb-link i {
        margin-right: 5px;
    }

    .breadcrumb-link:hover {
        color: #0056b3;
        text-decoration: underline;
    }

    .breadcrumb-separator {
        color: #666;
        margin: 0 5px;
    }.header {
      margin-bottom: 20px;
        border-bottom: 2px solid #e9ecef;
    }

    .container {
        
        margin: 0 auto;
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        margin-top: 30px;
    }

    .mt-4{
        background-color: white;
       
    }

    h2, h4 {
        color: #4a90e2;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .form-horizontal .form-group {
        
        margin-bottom: 45px;
    }

    .form-horizontal .form-control {
        border: 2px solid #76aae6;
        border-radius: 4px;
        padding: 8px;
         max-width: 110%;
      
        
    }

 .form-control {
    height: 40px;
    border: 3px solid #077ef6;
    width: 300px;
    margin-top: 5px;
 }
    
.control-label{

color: #666;
margin-bottom: 15px;

}
    .form-horizontal .form-control:focus {
        border-color: #087afc;
        box-shadow: 0 0 5px rgba(74, 144, 226, 0.5);
    }

    .stock-details-panel {
        background-color: rgb(160, 160, 232);
        border-radius: 5px;
        padding: 20px;
        width: 70%;
        margin-right: 10%;

        
        
        text-align: center;
    }


    .stock-details-panel p{ margin-bottom: 50px;}

    /* Payment Table */
    .table {
        width: 100%;
        border: 1px solid #ddd;
        margin-bottom: 20px;
        
    }

    .table th, .table td {
        border: 1px solid #ddd;
        padding: 10px;
        height: 20px;
    }

    .btn {
        padding: 10px 20px;
        font-size: 16px;
    }

    .btn-primary {
    font-size: 20px;
    padding: 10px 30px;
    border: none;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    display: inline-block;
    background-color: #230cf4;
    color: white;
    width: 200px;
    border-radius: 5px;
    }
    .btn-primary:hover {
    background-color: #0056b3;
    cursor: pointer;
}

    .btn-secondary {
    font-size: 20px;
    padding: 10px 30px;
    border: none;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    display: inline-block;
    background-color: #230cf4;
    color: white;
    width: 200px;
    border-radius: 5px;
    height: 40px;
    }
    .btn-secondary:hover {
    background-color: #0056b3;
    cursor: pointer;
}

    .btn-danger {
       
        color: gray;
    }

    .form-actions {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
    }

    .form-row {
    display: flex;
    justify-content: space-between;
    gap: 20px;
    width: 80%; /* Ajouter cette ligne pour que les colonnes utilisent toute la largeur */
}

.col-md-6 {
    width: 50%; /* Ajustez la largeur pour que chaque colonne prenne environ la moitié de la ligne */
    flex-grow: 1;
}


    .form-group label {
        font-weight: bold;
        margin-bottom: 15px;
    }

    .stock-details-panel {
        text-align: left;
    }

    h4 {
        color: #4a90e2;
    }

    /* Réduire la largeur de la table de détails de paiement */
#detailsPaiementSection .table {
     /* Réduisez ici pour ajuster la largeur de la table */
    max-width: 100%; /* Empêche le dépassement de la table */
    margin: 0 auto; /* Centre la table sur la page */
   
}

/* Ajuster la largeur des champs à l'intérieur de la table */
#detailsPaiementSection .form-control {
    width: 100px; /* Réduisez la largeur des champs */
    max-width: 100%; /* Empêche le dépassement des champs */
}

/* Ajuster la largeur des colonnes de la table pour un affichage plus compact */
#detailsPaiementSection .table th, #detailsPaiementSection .table td {
    padding: 5px; /* Réduisez l'espace entre les cellules */
    text-align: center; /* Centrer le texte dans les cellules */
}

    
</style>

